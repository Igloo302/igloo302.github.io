<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>路由器 on 冰屋里</title>
    <link>https://igloo302.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/</link>
    <description>Recent content in 路由器 on 冰屋里</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Apr 2020 18:28:49 +0800</lastBuildDate><atom:link href="https://igloo302.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenWrt使用macvlan&#43;mwan3实现单线多拨</title>
      <link>https://igloo302.github.io/2020/openwrt%E4%BD%BF%E7%94%A8macvlan-mwan3%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%BA%BF%E5%A4%9A%E6%8B%A8/</link>
      <pubDate>Mon, 06 Apr 2020 18:28:49 +0800</pubDate>
      
      <guid>https://igloo302.github.io/2020/openwrt%E4%BD%BF%E7%94%A8macvlan-mwan3%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%BA%BF%E5%A4%9A%E6%8B%A8/</guid>
      <description>相关的资料相当多，踩了一点坑之后分享记录一下。
macvlan可以创建虚拟的Wan口，mwan3可以控制多个网络的负载均衡。
创建虚拟WAN 查看自己的WAN对应的接口名，我这边是eth0.2，使用macvlan创建虚拟WAN：
ip link add link eth0.2 name veth0 type macvlan ifconfig veth0 up 可以将这两行指令写进路由器的自启动脚本中，也可以编辑网络设置
vi /etc/config/network # 添加内容 config device &#39;veth0&#39; option name &#39;veth0&#39; option ifname &#39;eth0.2&#39; option type &#39;macvlan&#39; 创建拨号接口 在网络-接口中创建新接口，名称设置为vwan1，类型选择PPPOE，并填写宽带账号密码。
在高级设置中将vwan1的网关跃点设置为42，原来的wan设置为41（数字随意，不同即可）。
此时可以如果看到两个接口分别获得了不同的IP，即可进行下一步，否则说明运营商不支持这种双拨方式，可以考虑尝试并发拨号。
修改防火墙 在网络-防火墙-区域中修改wan，覆盖网络中勾选vwan1。
在接口中关闭wan，尝试是否能够正常上网。
设置负载均衡 参考LEDE/OpenWrt使用macvlan和mwan3实现单线多拨-负载均衡一节，写得很清晰，我就不造轮子了。
顺便一提，杭州电信支持非并发双拨，并发拨号没有限制，不过下载流量不能叠加，但上传流量可以叠加，不过最多100Mbps。
参考资料 macvlan单线多拨+mwan3负载平衡
LEDE/OpenWrt使用macvlan和mwan3实现单线多拨</description>
    </item>
    
    <item>
      <title>7×24-斐讯N1的旁路由玩法</title>
      <link>https://igloo302.github.io/2020/724-%E6%96%90%E8%AE%AFn1%E7%9A%84%E6%97%81%E8%B7%AF%E7%94%B1%E7%8E%A9%E6%B3%95/</link>
      <pubDate>Mon, 24 Feb 2020 14:38:04 +0000</pubDate>
      
      <guid>https://igloo302.github.io/2020/724-%E6%96%90%E8%AE%AFn1%E7%9A%84%E6%97%81%E8%B7%AF%E7%94%B1%E7%8E%A9%E6%B3%95/</guid>
      <description>N1是已经暴雷快两年的斐讯留下来的经典矿渣遗产。2GB RAM，四核心ARM SOC，4K 输出，千兆网口，读写30MB+的USB 2.0，决定了N1绝不甘心当一个吃灰的挖矿机。在一众技术大佬的研究下，N1成功转型为电视盒子、NAS、下载机、高清播放器、复古游戏机，以及本文要介绍的旁路由。
我们平时使用的家用路由器需要负责网关服务器、DHCP服务器、PPPOE拨号、DNS服务器、发射WIFI信号等工作，所谓旁路由（并不是专业的叫法，民间约定俗成）就是把这些功能中的一部分让渡给这台设备去处理。
大多数的家用路由器的性能都是及其羸弱的，运行去广告、V2Ray、SS这种服务的时候难以发挥出最好的效果，有了一台旁路由，我们就可以把这些高难度任务交给它，让主路由安安心心地拨号、分配IP地址（DHCP）。连接方式如图：
因为这个网络拓扑本质上实现了一次单线复用，所以也适用于弱电箱较小，无法容纳高性能网络设备的情况，比方说我就将N1放在了有网口的书房，同时打开N1的WiFi用于补足书房信号不足的问题。
所需设备  正常运行的家庭网络 斐讯N1 双公头USB数据线（可使用两根没有的MicroUSB数据线DIY） 1GB以上U盘或TF卡+读卡器（USB 2.0最佳） USB鼠标 显示器和HDMI线 刷机包，包括N1降级工具（链接: https://pan.baidu.com/s/11-7FbdmTDBTcb-qberyQLw 提取码: 6h3s）、OpenWRT固件 Windows或Mac电脑  N1降级 如果买到的N1版本高于2.19，则需要将boot、bootloader、recovery降级，简要步骤如下：
 加电开机后用鼠标多次点击版本号，弹出Toast 「打开ADB」。 将N1连上Wifi或有线网络，记录IP地址 用双头USB线将N1和电脑相连 运行T1_N1降级工具v1.1.exe自动降级或手动刷入老版本boot、bootloader、recovery。  手动刷入方法：
 打开adb所在文件夹，按住Shift同时右键空白处，点击「在此处打开Powershell窗口」 依次输入以下代码  # adb连接N1 .\adb.exe connect 192.168.x.xxx # 重启到fastboot .\adb.exe reboot fastboot # 刷入boot、bootloader、recovery fastboot flash boot .\N1\N1boot.img fastboot flash bootloader .\N1\N1bootloader.img fastboot flash recovery .\N1\N1recovery.img 安装OpenWRT 目前有2种方式安装OpenWRT/LEDE，分别为
 安装Armbian系统，在Docker（可以理解为虚拟机）中安装OpenWRT 只安装OpenWRT  同时，两种安装方式都可以通过线刷和U盘刷/卡刷两种方式刷入N1。
因为笔者不只需要这台旁路由安安静静地负责单纯翻墙和去广告工作，所以选择只安装OpenWRT，固件采用的是flippy编译的OP，这个固件编译lean &amp;amp; lienol维护的源码。</description>
    </item>
    
  </channel>
</rss>
